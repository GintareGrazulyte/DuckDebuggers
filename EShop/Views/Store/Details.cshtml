@model BOL.Objects.Item
@{
    ViewBag.Title = "Details";
}
<head>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/quantityBox.css" rel="stylesheet" />
</head>
<div class="jumbotron">
    <h1 class="display-3">@Model.Name</h1>

    <hr class="my-4">

    <div class="row">
        <div class="col-sm-6">
            @{
                if(Model.ImageUrl != null)
                {
                    <img src="@Url.Content("~/Uploads/Images/" + Model.ImageUrl)" alt="@Model.Name" width="100%" class="img-thumbnail" />
                }
                else
                {
                    <img src="@Url.Content("~/Content/Images/NoImage.jpg")" alt="@Model.Name" width="100%" class="img-thumbnail" />

                }

            }

        </div>
        <div class="col-sm-6">
            <table class="table">
                <tr><td>@Html.DisplayNameFor(model => model.Name)</td><td>@Html.DisplayFor(model => model.Name)</td></tr>
                <tr><td>@Html.DisplayNameFor(model => model.Category)</td><td>@Html.DisplayFor(model => model.Category.Name)</td></tr>
            </table>

            @{
                decimal piecePrice = Model.Price / 100.0m;
                if (Model.HasDiscount)
                {
                    //apvalinimas. jei i parduotuves puse, istrint (int)
                    decimal discountPrice = (int)Model.GetPriceWithDiscount() / 100.0m;
                    <p class="lead text-lg-right itemPrice">
                        <del class="text-primary">@Html.DisplayFor(modelItem => piecePrice) Eur/Piece</del>
                        @* JEI TRINSIT SITA BR PASAKYKIT EDGARUI, NES SULUS KODAS VIENOJ VIETOJ ISTRYNUS*@
                        <br />
            
                        @Html.DisplayFor(modelItem => discountPrice) Eur/Piece</p>
                }
                else
                {
                    <p class="lead text-lg-right itemPrice">@Html.DisplayFor(modelItem => piecePrice) Eur/Piece</p>
                }
            }
            
            <div class="quantity" style="float:right;">
                <p class="lead text-lg-right" style="display: inline"> Quantity:</p>
                <button class="minus-btn" type="button" name="button">
                    <img src="~/Content/Images/minus.svg" alt="" />
                </button>
                <form id="myForm">
                    @Html.HiddenFor(modelItem => Model.Id)
                    <input class="quantityBox" type="text" name="quantityBox" value="1" @*onchange="UpdateTable(this.form)" *@>
                </form>
                <button class="plus-btn" type="button" name="button">
                    <img src="~/Content/Images/plus.svg" alt="" />
                </button>
                @if (Model.HasDiscount)
                {
                    <p class="lead text-lg-right" id="totalPrice">@("Total Price: " + (int)Model.GetPriceWithDiscount() / 100.0m) Eur</p>
                }
                else
                {
                    <p class="lead text-lg-right" id="totalPrice">@("Total Price: " + Model.Price / 100.0m) Eur</p>
                }


            </div>
            @*TODO: PANAIKINKIT KAS NORS SITUOS BR PLS*@
            <br /><br /><br /><br />
            <button type="button" id="addToCart" class="btn btn-primary text-lg-right" style="float: right;" onClick="AddItem(@Model.Id)">Add to cart</button>

           
        </div>
    </div>

    <hr class="my-4">

    <div class="card border-secondary mb-3">
        <div class="card-header">@Html.DisplayNameFor(model => model.Description)</div>
        <div class="card-body">
            <p class="card-text">@Html.DisplayFor(model => model.Description)</p>
        </div>
    </div>
    <div id="snackbar">Item was Added to Cart</div>
</div>


<div class="fb-comments" data-width="230" data-numposts="5"/>
<p>
    @{
        @Html.ActionLink("Back to browsing", "Index", "Store")
    }

</p>

<script type="text/javascript">

    function AddItem(itemID) {

        var quantity = $(".quantityBox");
        var quantityInt = parseInt(quantity.val());
        if (isNaN(quantityInt) || quantityInt < 1) {
            quantity.val(1);
            return;
        }

        var url = '@Url.Action("AddToCart", "Cart")';
        $.ajax({
            type: "POST",
            url: url,
            data: { itemId: itemID, quantity: quantityInt},
            cache: false,
            dataType: 'html',
            success: function (response) {
                var result = JSON.parse(response);
                $("#CartBox").html(result.itemCount);
                $(".totalPrice").html(result.totalPrice);
                var x = document.getElementById("snackbar");
                x.innerHTML = result.message;
                x.className = "show";
                setTimeout(function () { x.className = x.className.replace("show", ""); }, 1300);
            }
        });
    }

     $(document).ready(function () {

         $('.quantityBox').on('change', function (e) {
             e.preventDefault();
             var $quantity = $(".quantityBox");
             var quantityInt = parseInt($quantity.val());
             var isDiscounted = "@Model.HasDiscount" == "True";
             var isDecimalComma = $(".itemPrice").html().split("<br>");
             if (isDecimalComma[1] == undefined)
                 isDecimalComma = isDecimalComma[0]
             else
                 isDecimalComma = isDecimalComma[1];

             if (isDecimalComma == isDecimalComma.replace(".", ","))
                 var localeString = 'de-DE';
             else
                 var localeString = 'en-US';

             if (isNaN(quantityInt) || quantityInt < 1) {
                 $quantity.val(1);
                 if (isDiscounted) {
                     var priceInFloat = (parseFloat(@((int)Model.GetPriceWithDiscount())) / 100).toLocaleString(localeString);
                     var price = (priceInFloat).toLocaleString(localeString, { minimumFractionDigits: 2 });
                     $("#totalPrice").html("Total Price: " + price + " Eur");
                 }
                 else {
                     var priceInFloat = parseFloat(@Model.Price) / 100;
                     var price = (priceInFloat).toLocaleString(localeString, { minimumFractionDigits: 2 });
                     $("#totalPrice").html("Total Price: " + price + " Eur");
                 }
                 return;
             }
             else if(quantityInt > 99999) {
                 $quantity.val(99999);
                 quantityInt = 99999;
             }
             if (isDiscounted) {
                 var priceInFloat = parseFloat(@((int)Model.GetPriceWithDiscount())) / 100;
                 price = (priceInFloat * quantityInt).toLocaleString(localeString, { minimumFractionDigits: 2 });
                 
                 $("#totalPrice").html("Total Price: " + price + " Eur");
             }
             else {
                 var priceInFloat = parseFloat(@Model.Price) / 100;
                 var price = (priceInFloat * quantityInt).toLocaleString(localeString, { minimumFractionDigits: 2 });
                 $("#totalPrice").html("Total Price: " + price + " Eur");
             }
         });

        $('.minus-btn').on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            var $input = $this.closest('div').find('.quantityBox');
            var value = parseInt($input.val());

            if (value > 1) {
                value = value - 1;
            }
            $input.val(value).trigger('change');
        });

        $('.plus-btn').on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            var $input = $this.closest('div').find('.quantityBox');
            var value = parseInt($input.val());

            if (value < 100000) {
                value = value + 1;
            }
            $input.val(value).trigger('change');
        });

    });
    </script>