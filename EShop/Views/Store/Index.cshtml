@model IEnumerable<BOL.Category>
@{
    ViewBag.Title = "Store";
}

<style>
    .container {
        overflow: hidden;
    }

    .filterDiv {
        float: left;
        width: 30%;
        min-width: 300px;
        max-width: 300px;
        max-height: 500px;
        margin: 0.1%;
        display: none;
    }

    .show {
        display: block;
    }

    .btn.active {
        background-color: #666;
        color: white;
    }
</style>

@*<h2>Browse Category</h2>*@

<div id="myBtnContainer" style="margin:10px auto;">
    @{ 
        var count = 0;
        foreach (var category in Model)
        {
            count += category.Items.Count;
        }
    }
    @foreach (var category in Model)
    {
        @*@Html.ActionLink(category.Name, "Browse", new { categoryId = category.Id })
            <span class="badge badge-primary badge-pill">(@category.Items.Count)</span>*@
        <button class="btn badge-pill active" onclick="filterSelection('@category.Name')"> @category.Name <span class="badge badge-primary badge-pill">(@category.Items.Count)</span></button>
    }
</div>

<div class="container">
@foreach (var category in Model)
{
    foreach (var item in category.Items)
    {
        <div class="filterDiv @category.Name">
            @{ 
            decimal piecePrice = item.Price / 100.0m;
            }
            <div class="card d-inline-block m-1">
                <h3 class="card-header">@Html.DisplayFor(modelItem => item.Name)</h3>
                <div class="card-body">
                <h6 class="card-subtitle text-muted">@category.Name</h6>
                </div>
                @{
                    if (item.ImageUrl != null)
                    {
                        @:<img src="@Url.Content("~/Uploads/Images/" + item.ImageUrl)" alt="@item.Name" style="height:200px; min-height:200px; width:100%;" />
                }
                    else
                    {
                        <img style="height: 200px; width: 100%; display: block;" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22318%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20318%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_158bd1d28ef%20text%20%7B%20fill%3Argba(255%2C255%2C255%2C.75)%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A16pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_158bd1d28ef%22%3E%3Crect%20width%3D%22318%22%20height%3D%22180%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22129.359375%22%20y%3D%2297.35%22%3EImage%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" alt="Card image">
                    }
                }
                <div class="card-body">
                    <p class="card-text text-lg-right">@Html.DisplayFor(modelItem => piecePrice) Eur/Piece</p>
                </div>
                <div class="card-body">
                    <div>
                        <button type="button" id="details" class="btn btn-secondary" style="left: 20px;" onclick="location.href='@Url.Action("Details", "Store", new {  itemId = item.Id, categoryId = item.CategoryId }, null)'">View details</button>
                        <span><button type="button" id="addToCart" class="btn btn-primary" style="position: absolute; right: 20px;" onclick="location.href='@Url.Action("AddToCart", "Cart", new { id = item.Id }, null)'">Add to cart</button></span>
                    </div>
                </div>
                <div class="card-footer text-muted">
                </div>
            </div>
        </div>
    }
}
</div>

<script>
    filterSelection("all")
    function filterSelection(c) {
        var x, i;
        x = document.getElementsByClassName("filterDiv");
        if (c == "all") c = "";
        for (i = 0; i < x.length; i++) {
            if (x[i].className.indexOf(c) > -1)
            {
                if (c != "" && (x[i].className).indexOf("show") > -1)
                {
                    w3RemoveClass(x[i], "show");
                }
                else
                {
                    if (c == "" && (x[i].className).indexOf("show") <= -1 || c != "")
                    {
                        w3AddClass(x[i], "show");
                    }
                }
            }
        }
    }

    function w3AddClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            if (arr1.indexOf(arr2[i]) == -1) {
                element.className += " " + arr2[i];
            }
        }
    }

    function w3RemoveClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            while (arr1.indexOf(arr2[i]) > -1) {
                arr1.splice(arr1.indexOf(arr2[i]), 1);
            }
        }
        element.className = arr1.join(" ");
    }

    var btnContainer = document.getElementById("myBtnContainer");
    var btns = btnContainer.getElementsByClassName("btn");
    for (var i = 0; i < btns.length; i++) {
        btns[i].addEventListener("click", function () {
            if (this.className.indexOf("active") > -1)
            {
            this.className = this.className.replace(" active", "");
            }
            else
            {
            this.className += " active";
            }
        });
    }
</script>
